# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G2o1W_eTphHYlVdQ9B22hPeRTMn8CZKB
"""

from google.colab import files
uploaded = files.upload()
import os
print(os.listdir())
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Load CSV file
file_path = "house_prices.csv"  # If using Google Colab, upload the file first
df = pd.read_csv(file_path)

# Convert categorical 'Location' to numerical using Label Encoding
encoder = LabelEncoder()
df["Location"] = encoder.fit_transform(df["Location"])

# Define Features (X) and Target (y)
X = df[["Size_sqft", "Rooms", "Location"]]
y = df["Price"]

# Split Data: 80% Training, 20% Testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Make Predictions
y_pred = model.predict(X_test)

# Evaluate Model
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"Mean Absolute Error: {mae}")
print(f"Mean Squared Error: {mse}")
print(f"Root Mean Squared Error: {rmse}")

# Visualization: Actual vs Predicted Prices
plt.figure(figsize=(8,5))
plt.scatter(y_test, y_pred, color="blue", alpha=0.6)
plt.plot(y_test, y_test, color="red", linestyle="--")  # Ideal prediction line
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted House Prices")
plt.grid(True)
plt.show()